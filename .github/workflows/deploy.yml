name: Deploy BookMarkDown

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_run:
    workflows: ["Continuous Integration"]
    types: [completed]
    branches: [ main ]

permissions:
  contents: write
  issues: write
  pull-requests: write
  deployments: write

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: false

jobs:
  # Wait for CI to complete successfully
  check-ci:
    name: Check CI Status
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_run'
    
    steps:
    - name: Check CI workflow result
      run: |
        if [[ "${{ github.event.workflow_run.conclusion }}" == "cancelled" ]]; then
          echo "⚠️ CI workflow was cancelled. Skipping deployment."
          exit 0
        fi
        
        if [[ "${{ github.event.workflow_run.conclusion }}" != "success" ]]; then
          echo "❌ CI workflow failed. Deployment cancelled."
          exit 1
        fi
        
        echo "✅ CI workflow completed successfully"

  # Build artifacts for deployment (only runs for direct push events)
  build:
    name: Build for Deployment
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'pull_request'
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Configure OAuth service URL for production
      run: |
        echo "VITE_OAUTH_SERVICE_URL=https://bookmarkdown-github-oauth.ar90n.net" > web/.env.production

    - name: Build all targets
      run: npm run build:all

    - name: Upload library artifacts
      uses: actions/upload-artifact@v4
      with:
        name: library-dist-${{ github.run_id }}
        path: dist/browser/

    - name: Upload extension artifacts
      uses: actions/upload-artifact@v4
      with:
        name: extension-dist-${{ github.run_id }}
        path: dist/extension/

    - name: Upload web artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-dist-${{ github.run_id }}
        path: dist/web/
        retention-days: 1

  deploy-oauth-service:
    name: Deploy OAuth Service
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_run')
    needs: [build]
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Setup Node.js  
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        
    - name: Install OAuth service dependencies
      run: |
        cd github-oauth
        npm install
        
    - name: Deploy to Cloudflare Workers
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        workingDirectory: 'github-oauth'
        command: deploy

  deploy-web-production:
    name: Deploy Web App (Production)
    if: github.ref == 'refs/heads/main' && (github.event_name == 'push' || github.event_name == 'workflow_run')
    needs: [build, deploy-oauth-service]
    runs-on: ubuntu-latest
    
    environment:
      name: production
      url: https://bookmarkdown.ar90n.net
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-dist-${{ github.run_id }}
        path: ./dist/web

    - name: Deploy to Cloudflare Workers (Production)
      id: deployment
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        workingDirectory: 'web'
        command: deploy

    - name: Health check deployment
      run: |
        # Wait for deployment to be ready
        sleep 30
        
        # Check if the deployed site is accessible
        SITE_URL="https://bookmarkdown.ar90n.net"
        echo "Checking deployment health at: $SITE_URL"
        
        # Retry up to 5 times with 10s delays
        for i in {1..5}; do
          if curl -f -s -o /dev/null "$SITE_URL"; then
            echo "✅ Deployment health check passed"
            exit 0
          else
            echo "⏳ Attempt $i failed, retrying in 10s..."
            sleep 10
          fi
        done
        
        echo "❌ Deployment health check failed after 5 attempts"
        exit 1

    - name: Create deployment status
      uses: actions/github-script@v7
      with:
        script: |
          const { owner, repo } = context.repo;
          
          // Create deployment
          const deployment = await github.rest.repos.createDeployment({
            owner,
            repo,
            ref: '${{ github.sha }}',
            environment: 'production',
            description: 'BookMarkDown production deployment',
            auto_merge: false,
            required_contexts: []
          });
          
          // Create deployment status
          await github.rest.repos.createDeploymentStatus({
            owner,
            repo,
            deployment_id: deployment.data.id,
            state: 'success',
            environment_url: 'https://bookmarkdown.ar90n.net',
            description: 'Deployment completed successfully'
          });

    - name: Notify deployment success
      if: success()
      run: |
        echo "🚀 Production deployment successful!"
        echo "Site URL: https://bookmarkdown.ar90n.net"

  deploy-web-staging:
    name: Deploy Web App (Preview)
    if: github.event_name == 'pull_request'
    needs: [build]
    runs-on: ubuntu-latest
    
    environment:
      name: staging
      url: https://bookmarkdown-staging.ar90n.net
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Download web artifacts
      uses: actions/download-artifact@v4
      with:
        name: web-dist-${{ github.run_id }}
        path: ./dist/web

    - name: Create staging wrangler config
      run: |
        cd web
        cp wrangler.toml wrangler.staging.toml
        sed -i 's/name = "bookmarkdown-web"/name = "bookmarkdown-web-staging"/' wrangler.staging.toml
        sed -i 's/bookmarkdown.ar90n.net/bookmarkdown-staging.ar90n.net/' wrangler.staging.toml

    - name: Deploy to Cloudflare Workers (Staging)
      id: deployment
      uses: cloudflare/wrangler-action@v3
      with:
        apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        workingDirectory: 'web'
        command: deploy --config wrangler.staging.toml

    - name: Comment PR with preview URL
      uses: actions/github-script@v7
      with:
        script: |
          const previewUrl = `https://bookmarkdown-staging.ar90n.net`;
          
          // Look for existing preview comments
          const comments = await github.rest.issues.listComments({
            owner: context.repo.owner,
            repo: context.repo.repo,
            issue_number: context.payload.pull_request.number,
          });
          
          const existingComment = comments.data.find(comment => 
            comment.body.includes('Preview deployment ready!')
          );
          
          const commentBody = `🚀 **Preview deployment ready!**\n\n📖 Preview: ${previewUrl}\n\n*This preview will be available until the PR is merged or closed.*`;
          
          if (existingComment) {
            // Update existing comment
            await github.rest.issues.updateComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              comment_id: existingComment.id,
              body: commentBody
            });
          } else {
            // Create new comment
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: commentBody
            });
          }

